{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rithe\\\\OneDrive\\\\Desktop\\\\PROJECTIARE\\\\assigment\\\\src\\\\ProblemsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ProblemsPage.css\"; // Assuming you have this file for styling the card list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProblemsPage({\n  problems\n}) {\n  _s();\n  const navigate = useNavigate();\n\n  // A message to show if there are no problems\n  if (!problems || problems.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problems-container-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problems-card-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"problems-list-header\",\n          children: \"Problems List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-problems-text\",\n          children: \"No problems are available at the moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  const handleSolveClick = problemId => {\n    // Navigate with a state to trigger exam mode\n    navigate(`/solve/${problemId}`, {\n      state: {\n        examMode: true\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problems-container-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problems-card-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"problems-list-header\",\n        children: \"Problems List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problems-grid\",\n        children: problems.map(problem => {\n          var _problem$difficulty;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-item-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"problem-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"problem-title\",\n                children: problem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `difficulty-tag ${(_problem$difficulty = problem.difficulty) === null || _problem$difficulty === void 0 ? void 0 : _problem$difficulty.toLowerCase()}`,\n                children: problem.difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"solve-action-button\",\n              onClick: () => handleSolveClick(problem.id),\n              children: \"Solve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, problem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ProblemsPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ProblemsPage;\nexport default ProblemsPage;\nvar _c;\n$RefreshReg$(_c, \"ProblemsPage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","ProblemsPage","problems","_s","navigate","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSolveClick","problemId","state","examMode","map","problem","_problem$difficulty","title","difficulty","toLowerCase","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/rithe/OneDrive/Desktop/PROJECTIARE/assigment/src/ProblemsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ProblemsPage.css\"; // Assuming you have this file for styling the card list\n\nfunction ProblemsPage({ problems }) {\n  const navigate = useNavigate();\n\n  // A message to show if there are no problems\n  if (!problems || problems.length === 0) {\n    return (\n      <div className=\"problems-container-background\">\n        <div className=\"problems-card-wrapper\">\n          <h2 className=\"problems-list-header\">Problems List</h2>\n          <p className=\"no-problems-text\">No problems are available at the moment.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const handleSolveClick = (problemId) => {\n    // Navigate with a state to trigger exam mode\n    navigate(`/solve/${problemId}`, { state: { examMode: true } });\n  };\n\n  return (\n    <div className=\"problems-container-background\">\n      <div className=\"problems-card-wrapper\">\n        <h2 className=\"problems-list-header\">Problems List</h2>\n        <div className=\"problems-grid\">\n          {problems.map((problem) => (\n            <div className=\"problem-item-card\" key={problem.id}>\n              <div className=\"problem-details\">\n                <h3 className=\"problem-title\">{problem.title}</h3>\n                <span\n                  className={`difficulty-tag ${\n                    problem.difficulty?.toLowerCase()\n                  }`}\n                >\n                  {problem.difficulty}\n                </span>\n              </div>\n              <button\n                className=\"solve-action-button\"\n                onClick={() => handleSolveClick(problem.id)}\n              >\n                Solve\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProblemsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
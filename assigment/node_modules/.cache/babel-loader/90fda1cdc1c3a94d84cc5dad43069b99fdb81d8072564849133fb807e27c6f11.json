{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rithe\\\\OneDrive\\\\Desktop\\\\PROJECTIARE\\\\assigment\\\\src\\\\faculty\\\\FacultyStudentsPage.js\";\nimport React from \"react\";\nimport \"./FacultyDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FacultyStudentsPage({\n  batches,\n  studentScores\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faculty-section-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), batches.map(batch => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batch-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: batch.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: batch.students.map(s => {\n            var _studentScores$s$id$t, _studentScores$s$id, _studentScores$s$id$b, _studentScores$s$id2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: s.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_studentScores$s$id$t = (_studentScores$s$id = studentScores[s.id]) === null || _studentScores$s$id === void 0 ? void 0 : _studentScores$s$id.total) !== null && _studentScores$s$id$t !== void 0 ? _studentScores$s$id$t : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  fontSize: \"0.98em\",\n                  fontWeight: 500\n                },\n                children: Object.entries((_studentScores$s$id$b = (_studentScores$s$id2 = studentScores[s.id]) === null || _studentScores$s$id2 === void 0 ? void 0 : _studentScores$s$id2.breakdown) !== null && _studentScores$s$id$b !== void 0 ? _studentScores$s$id$b : {}).map(([qn, score], idx) => {\n                  var _studentScores$s$id$b2, _studentScores$s$id3;\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [qn, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"#38a169\"\n                      },\n                      children: score\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 28,\n                      columnNumber: 33\n                    }, this), idx < Object.keys((_studentScores$s$id$b2 = (_studentScores$s$id3 = studentScores[s.id]) === null || _studentScores$s$id3 === void 0 ? void 0 : _studentScores$s$id3.breakdown) !== null && _studentScores$s$id$b2 !== void 0 ? _studentScores$s$id$b2 : {}).length - 1 && \", \"]\n                  }, qn, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 27,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 19\n              }, this)]\n            }, s.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)]\n    }, batch.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = FacultyStudentsPage;\nexport default FacultyStudentsPage;\nvar _c;\n$RefreshReg$(_c, \"FacultyStudentsPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FacultyStudentsPage","batches","studentScores","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","batch","name","students","s","_studentScores$s$id$t","_studentScores$s$id","_studentScores$s$id$b","_studentScores$s$id2","id","total","style","fontSize","fontWeight","Object","entries","breakdown","qn","score","idx","_studentScores$s$id$b2","_studentScores$s$id3","color","keys","length","_c","$RefreshReg$"],"sources":["C:/Users/rithe/OneDrive/Desktop/PROJECTIARE/assigment/src/faculty/FacultyStudentsPage.js"],"sourcesContent":["import React from \"react\";\nimport \"./FacultyDashboard.css\";\n\nfunction FacultyStudentsPage({ batches, studentScores }) {\n  return (\n    <div className=\"faculty-section-card\">\n      <h2>Student Scores</h2>\n      {batches.map(batch => (\n        <div key={batch.id} className=\"batch-board\">\n          <h4>{batch.name}</h4>\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Total Score</th>\n                <th>Breakdown</th>\n              </tr>\n            </thead>\n            <tbody>\n              {batch.students.map(s => (\n                <tr key={s.id}>\n                  <td>{s.name}</td>\n                  <td>{studentScores[s.id]?.total ?? 0}</td>\n                  <td style={{ fontSize: \"0.98em\", fontWeight: 500 }}>\n                    {Object.entries(studentScores[s.id]?.breakdown ?? {}).map(\n                      ([qn, score], idx) => (\n                        <span key={qn}>\n                          {qn}: <span style={{ color: \"#38a169\" }}>{score}</span>\n                          {idx < Object.keys(studentScores[s.id]?.breakdown ?? {}).length - 1 && \", \"}\n                        </span>\n                      )\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default FacultyStudentsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
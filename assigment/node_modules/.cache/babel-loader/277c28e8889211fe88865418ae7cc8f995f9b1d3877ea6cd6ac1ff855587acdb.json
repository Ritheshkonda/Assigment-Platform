{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rithe\\\\OneDrive\\\\Desktop\\\\PROJECTIARE\\\\assigment\\\\src\\\\SolveProblemPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Split from \"react-split\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport \"./SolveProblemPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SolveProblemPage({\n  problems,\n  userInfo\n}) {\n  _s();\n  var _problem$difficulty;\n  const {\n    problemId\n  } = useParams();\n  const navigate = useNavigate();\n  const problem = problems.find(p => String(p.id) === String(problemId)) || {};\n\n  // State for verdict of each test case (null=not run, true=pass, false=fail)\n  const [testCaseResults, setTestCaseResults] = useState([null, null, null, null, null]);\n  const [tab, setTab] = useState(\"description\");\n  const [code, setCode] = useState(\"// Write your code here...\");\n  const [language, setLanguage] = useState(\"python\");\n  const [customInput, setCustomInput] = useState(\"\");\n  const [runMessage, setRunMessage] = useState(\"\");\n  const [customOutput, setCustomOutput] = useState(\"\");\n  const example = problem.example || {\n    input: \"1 2\",\n    output: \"3\"\n  };\n\n  // Run official test cases (toolbar run)\n  const handleRun = () => {\n    const simulated = Array(5).fill(0).map(() => Math.random() > 0.5);\n    setTestCaseResults(simulated);\n    setRunMessage(\"Code evaluated. Green = pass, Red = fail.\");\n    setTab(\"testcases\");\n  };\n\n  // Run custom input ONLY\n  const handleRunCustom = () => {\n    if (customInput.trim().length > 0) {\n      setCustomOutput(\"(Simulated Output): \" + customInput.split(\"\").reverse().join(\"\"));\n    } else {\n      setCustomOutput(\"\");\n    }\n  };\n  const handleSubmit = () => {\n    setRunMessage(\"Submission sent! Results will be shown after evaluation.\");\n    // Optionally: call handleRun() or do real backend submit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solve-problem-page-root\",\n    children: /*#__PURE__*/_jsxDEV(Split, {\n      className: \"split-panel\",\n      sizes: [46, 54],\n      minSize: 320,\n      gutterSize: 6,\n      cursor: \"col-resize\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-question-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => navigate(-1),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \" Back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: problem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `difficulty-badge ${(_problem$difficulty = problem.difficulty) === null || _problem$difficulty === void 0 ? void 0 : _problem$difficulty.toLowerCase()}`,\n          children: problem.difficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"description\" ? \"active\" : \"\",\n            onClick: () => setTab(\"description\"),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"examples\" ? \"active\" : \"\",\n            onClick: () => setTab(\"examples\"),\n            children: \"Examples\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"testcases\" ? \"active\" : \"\",\n            onClick: () => setTab(\"testcases\"),\n            children: \"Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"custom\" ? \"active\" : \"\",\n            onClick: () => setTab(\"custom\"),\n            children: \"Custom Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-tabpane\",\n          children: [tab === \"description\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-description\",\n            children: problem.description || \"No description yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), tab === \"examples\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example Input:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: example.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: example.output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), tab === \"testcases\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"testcase-boxes\",\n              children: testCaseResults.map((result, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `testcase-box ${result === null ? \"idle\" : result ? \"pass\" : \"fail\"}`,\n                title: result === null ? \"Not evaluated\" : result ? \"Passed\" : \"Failed\",\n                children: idx + 1\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#888\",\n                fontStyle: \"italic\",\n                marginTop: 10\n              },\n              children: [\"Test cases are hidden and will be evaluated automatically upon submission.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 93\n              }, this), \"Each box shows Pass/Fail after evaluation.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), tab === \"custom\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"custom-input\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Custom Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"custom-input\",\n              className: \"custom-input-area\",\n              rows: \"6\",\n              value: customInput,\n              onChange: e => setCustomInput(e.target.value),\n              placeholder: \"Enter your own test input here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"run-btn\",\n              style: {\n                marginTop: 12,\n                marginBottom: 8,\n                minWidth: 120\n              },\n              onClick: handleRunCustom,\n              type: \"button\",\n              children: \"Run Custom Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), customOutput && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 10,\n                background: \"#f3f2fc\",\n                borderRadius: 6,\n                fontSize: \"1em\",\n                color: \"#4c3488\",\n                padding: \"9px 14px\",\n                border: \"1px solid #d3caf3\",\n                fontWeight: 500\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Custom Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  margin: 0\n                },\n                children: customOutput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-editor-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-toolbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cpp\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-btn\",\n            onClick: handleRun,\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            style: {\n              marginLeft: 8\n            },\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MonacoEditor, {\n          height: \"410px\",\n          theme: \"vs-dark\",\n          language: language,\n          value: code,\n          onChange: val => setCode(val),\n          options: {\n            fontSize: 15,\n            minimap: {\n              enabled: false\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), runMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-panel\",\n          style: {\n            marginTop: 12\n          },\n          children: runMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(SolveProblemPage, \"8G2XXG6YaoVLdXzXcrKogAwOqiM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SolveProblemPage;\nexport default SolveProblemPage;\nvar _c;\n$RefreshReg$(_c, \"SolveProblemPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Split","MonacoEditor","jsxDEV","_jsxDEV","SolveProblemPage","problems","userInfo","_s","_problem$difficulty","problemId","navigate","problem","find","p","String","id","testCaseResults","setTestCaseResults","tab","setTab","code","setCode","language","setLanguage","customInput","setCustomInput","runMessage","setRunMessage","customOutput","setCustomOutput","example","input","output","handleRun","simulated","Array","fill","map","Math","random","handleRunCustom","trim","length","split","reverse","join","handleSubmit","className","children","sizes","minSize","gutterSize","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","difficulty","toLowerCase","description","style","marginTop","result","idx","color","fontStyle","htmlFor","rows","value","onChange","e","target","placeholder","marginBottom","minWidth","type","background","borderRadius","fontSize","padding","border","fontWeight","margin","marginLeft","height","theme","val","options","minimap","enabled","_c","$RefreshReg$"],"sources":["C:/Users/rithe/OneDrive/Desktop/PROJECTIARE/assigment/src/SolveProblemPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Split from \"react-split\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport \"./SolveProblemPage.css\";\n\nfunction SolveProblemPage({ problems, userInfo }) {\n  const { problemId } = useParams();\n  const navigate = useNavigate();\n  const problem = problems.find((p) => String(p.id) === String(problemId)) || {};\n\n  // State for verdict of each test case (null=not run, true=pass, false=fail)\n  const [testCaseResults, setTestCaseResults] = useState([null, null, null, null, null]);\n  const [tab, setTab] = useState(\"description\");\n  const [code, setCode] = useState(\"// Write your code here...\");\n  const [language, setLanguage] = useState(\"python\");\n  const [customInput, setCustomInput] = useState(\"\");\n  const [runMessage, setRunMessage] = useState(\"\");\n  const [customOutput, setCustomOutput] = useState(\"\");\n\n  const example = problem.example || { input: \"1 2\", output: \"3\" };\n\n  // Run official test cases (toolbar run)\n  const handleRun = () => {\n    const simulated = Array(5)\n      .fill(0)\n      .map(() => Math.random() > 0.5);\n    setTestCaseResults(simulated);\n    setRunMessage(\"Code evaluated. Green = pass, Red = fail.\");\n    setTab(\"testcases\");\n  };\n\n  // Run custom input ONLY\n  const handleRunCustom = () => {\n    if (customInput.trim().length > 0) {\n      setCustomOutput(\n        \"(Simulated Output): \" + customInput.split(\"\").reverse().join(\"\")\n      );\n    } else {\n      setCustomOutput(\"\");\n    }\n  };\n\n  const handleSubmit = () => {\n    setRunMessage(\"Submission sent! Results will be shown after evaluation.\");\n    // Optionally: call handleRun() or do real backend submit\n  };\n\n  return (\n    <div className=\"solve-problem-page-root\">\n      <Split\n        className=\"split-panel\"\n        sizes={[46, 54]}\n        minSize={320}\n        gutterSize={6}\n        cursor=\"col-resize\"\n      >\n        {/* LEFT PANEL */}\n        <div className=\"left-question-panel\">\n          <button className=\"back-btn\" onClick={() => navigate(-1)}>\n            <span className=\"arrow\">←</span> Back\n          </button>\n          <h2>{problem.title}</h2>\n          <div className={`difficulty-badge ${problem.difficulty?.toLowerCase()}`}>\n            {problem.difficulty}\n          </div>\n          <div className=\"panel-tabs\">\n            <button className={tab === \"description\" ? \"active\" : \"\"} onClick={() => setTab(\"description\")}>Description</button>\n            <button className={tab === \"examples\" ? \"active\" : \"\"} onClick={() => setTab(\"examples\")}>Examples</button>\n            <button className={tab === \"testcases\" ? \"active\" : \"\"} onClick={() => setTab(\"testcases\")}>Test Cases</button>\n            <button className={tab === \"custom\" ? \"active\" : \"\"} onClick={() => setTab(\"custom\")}>Custom Input</button>\n          </div>\n\n          <div className=\"panel-tabpane\">\n            {tab === \"description\" && (\n              <div className=\"question-description\">{problem.description || \"No description yet.\"}</div>\n            )}\n            {tab === \"examples\" && (\n              <div>\n                <strong>Example Input:</strong>\n                <pre>{example.input}</pre>\n                <strong>Example Output:</strong>\n                <pre>{example.output}</pre>\n              </div>\n            )}\n            {tab === \"testcases\" && (\n              <div style={{ marginTop: 10 }}>\n                <div className=\"testcase-boxes\">\n                  {testCaseResults.map((result, idx) => (\n                    <div\n                      key={idx}\n                      className={`testcase-box ${\n                        result === null ? \"idle\" : result ? \"pass\" : \"fail\"\n                      }`}\n                      title={result === null ? \"Not evaluated\" : result ? \"Passed\" : \"Failed\"}\n                    >\n                      {idx + 1}\n                    </div>\n                  ))}\n                </div>\n                <div style={{ color: \"#888\", fontStyle: \"italic\", marginTop: 10 }}>\n                  Test cases are hidden and will be evaluated automatically upon submission.<br />\n                  Each box shows Pass/Fail after evaluation.\n                </div>\n              </div>\n            )}\n            {tab === \"custom\" && (\n              <div>\n                <label htmlFor=\"custom-input\"><strong>Custom Input:</strong></label>\n                <textarea\n                  id=\"custom-input\"\n                  className=\"custom-input-area\"\n                  rows=\"6\"\n                  value={customInput}\n                  onChange={e => setCustomInput(e.target.value)}\n                  placeholder=\"Enter your own test input here\"\n                />\n                <button\n                  className=\"run-btn\"\n                  style={{ marginTop: 12, marginBottom: 8, minWidth: 120 }}\n                  onClick={handleRunCustom}\n                  type=\"button\"\n                >\n                  Run Custom Input\n                </button>\n                {customOutput && (\n                  <div\n                    style={{\n                      marginTop: 10,\n                      background: \"#f3f2fc\",\n                      borderRadius: 6,\n                      fontSize: \"1em\",\n                      color: \"#4c3488\",\n                      padding: \"9px 14px\",\n                      border: \"1px solid #d3caf3\",\n                      fontWeight: 500\n                    }}\n                  >\n                    <b>Custom Output:</b>\n                    <pre style={{ margin: 0 }}>{customOutput}</pre>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* RIGHT PANEL */}\n        <div className=\"right-editor-panel\">\n          <div className=\"editor-toolbar\">\n            <select value={language} onChange={e => setLanguage(e.target.value)}>\n              <option value=\"python\">Python</option>\n              <option value=\"cpp\">C++</option>\n              <option value=\"java\">Java</option>\n            </select>\n            <button className=\"run-btn\" onClick={handleRun}>Run</button>\n            <button className=\"submit-btn\" style={{ marginLeft: 8 }} onClick={handleSubmit}>Submit</button>\n          </div>\n          <MonacoEditor\n            height=\"410px\"\n            theme=\"vs-dark\"\n            language={language}\n            value={code}\n            onChange={(val) => setCode(val)}\n            options={{\n              fontSize: 15,\n              minimap: { enabled: false }\n            }}\n          />\n          {runMessage && (\n            <div className=\"output-panel\" style={{ marginTop: 12 }}>\n              {runMessage}\n            </div>\n          )}\n        </div>\n      </Split>\n    </div>\n  );\n}\n\nexport default SolveProblemPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
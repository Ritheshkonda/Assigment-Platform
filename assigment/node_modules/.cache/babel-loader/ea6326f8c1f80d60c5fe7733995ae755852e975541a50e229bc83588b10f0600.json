{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rithe\\\\OneDrive\\\\Desktop\\\\PROJECTIARE\\\\assigment\\\\src\\\\SolveProblemPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport Split from \"react-split\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport \"./SolveProblemPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SolveProblemPage({\n  problems,\n  userInfo\n}) {\n  _s();\n  var _problem$difficulty;\n  const {\n    problemId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const problem = problems.find(p => String(p.id) === String(problemId)) || {};\n  const [testCaseResults, setTestCaseResults] = useState([null, null, null, null, null]);\n  const [tab, setTab] = useState(\"description\");\n  const [code, setCode] = useState(\"// Write your code here...\");\n  const [language, setLanguage] = useState(\"python\");\n  const [customInput, setCustomInput] = useState(\"\");\n  const [runMessage, setRunMessage] = useState(\"\");\n  const [customOutput, setCustomOutput] = useState(\"\");\n  const [isDisqualified, setIsDisqualified] = useState(false);\n  const example = problem.example || {\n    input: \"1 2\",\n    output: \"3\"\n  };\n\n  // --- Exam Mode and Malpractice Detection ---\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.examMode) {\n      const element = document.documentElement;\n      if (element.requestFullscreen) {\n        element.requestFullscreen().catch(err => {\n          console.error(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n        });\n      }\n    }\n    const handleMalpractice = () => {\n      if (!document.fullscreenElement) {\n        setIsDisqualified(true);\n        console.warn(\"Malpractice detected: User exited full-screen or switched tabs.\");\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleMalpractice);\n    window.addEventListener(\"blur\", handleMalpractice);\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleMalpractice);\n      window.removeEventListener(\"blur\", handleMalpractice);\n      if (document.fullscreenElement && document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n  }, [location.state]);\n  const handleRun = () => {\n    const simulated = Array(5).fill(0).map(() => Math.random() > 0.5);\n    setTestCaseResults(simulated);\n    setRunMessage(\"Code evaluated against hidden test cases.\");\n    setTab(\"testcases\");\n  };\n  const handleRunCustom = () => {\n    if (customInput.trim().length > 0) {\n      setCustomOutput(\"(Simulated Output): \" + customInput.split(\"\").reverse().join(\"\"));\n    } else {\n      setCustomOutput(\"\");\n    }\n  };\n  const handleSubmit = () => {\n    setRunMessage(\"Final submission successful!\");\n    // You would typically navigate away or lock the UI after final submission\n  };\n\n  // Render a disqualification overlay if malpractice is detected\n  if (isDisqualified) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disqualified-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Malpractice Detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have been disqualified for leaving the full-screen mode.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your session has been terminated.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => navigate(\"/\"),\n        children: \"Return to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  // THIS IS THE MAIN RETURN WITH ALL CONTENT RESTORED\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solve-problem-page-root\",\n    children: /*#__PURE__*/_jsxDEV(Split, {\n      className: \"split-panel\",\n      sizes: [45, 55],\n      minSize: 320,\n      gutterSize: 8,\n      cursor: \"col-resize\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-question-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: problem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `difficulty-badge ${(_problem$difficulty = problem.difficulty) === null || _problem$difficulty === void 0 ? void 0 : _problem$difficulty.toLowerCase()}`,\n          children: problem.difficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"description\" ? \"active\" : \"\",\n            onClick: () => setTab(\"description\"),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"examples\" ? \"active\" : \"\",\n            onClick: () => setTab(\"examples\"),\n            children: \"Examples\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"testcases\" ? \"active\" : \"\",\n            onClick: () => setTab(\"testcases\"),\n            children: \"Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: tab === \"custom\" ? \"active\" : \"\",\n            onClick: () => setTab(\"custom\"),\n            children: \"Custom Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-tabpane\",\n          children: [tab === \"description\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-description\",\n            children: problem.description || \"No description provided.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), tab === \"examples\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example Input:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: example.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: example.output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), tab === \"testcases\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"testcase-boxes\",\n              children: testCaseResults.map((result, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `testcase-box ${result === null ? \"idle\" : result ? \"pass\" : \"fail\"}`,\n                title: result === null ? \"Not evaluated\" : result ? \"Passed\" : \"Failed\",\n                children: idx + 1\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#888\",\n                fontStyle: \"italic\",\n                marginTop: 10\n              },\n              children: \"Results of hidden test cases are shown here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), tab === \"custom\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"custom-input\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Custom Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"custom-input\",\n              className: \"custom-input-area\",\n              rows: \"5\",\n              value: customInput,\n              onChange: e => setCustomInput(e.target.value),\n              placeholder: \"Enter your own test input...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"run-btn\",\n              style: {\n                marginTop: 12\n              },\n              onClick: handleRunCustom,\n              children: \"Run Custom Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), customOutput && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-output-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Custom Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  margin: 0\n                },\n                children: customOutput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-editor-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-toolbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cpp\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-btn\",\n            onClick: handleRun,\n            children: \"Run Tests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleSubmit,\n            children: \"Submit Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MonacoEditor, {\n          height: \"calc(100% - 120px)\" // Adjust height to fit panel\n          ,\n          theme: \"vs-dark\",\n          language: language,\n          value: code,\n          onChange: val => setCode(val),\n          options: {\n            fontSize: 15,\n            minimap: {\n              enabled: false\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), runMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-panel\",\n          style: {\n            marginTop: 12\n          },\n          children: runMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(SolveProblemPage, \"X2DNQj1+Zf/Z07290NzU5dNRNBM=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = SolveProblemPage;\nexport default SolveProblemPage;\nvar _c;\n$RefreshReg$(_c, \"SolveProblemPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","Split","MonacoEditor","jsxDEV","_jsxDEV","SolveProblemPage","problems","userInfo","_s","_problem$difficulty","problemId","navigate","location","problem","find","p","String","id","testCaseResults","setTestCaseResults","tab","setTab","code","setCode","language","setLanguage","customInput","setCustomInput","runMessage","setRunMessage","customOutput","setCustomOutput","isDisqualified","setIsDisqualified","example","input","output","_location$state","state","examMode","element","document","documentElement","requestFullscreen","catch","err","console","error","message","name","handleMalpractice","fullscreenElement","warn","addEventListener","window","removeEventListener","exitFullscreen","handleRun","simulated","Array","fill","map","Math","random","handleRunCustom","trim","length","split","reverse","join","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sizes","minSize","gutterSize","cursor","title","difficulty","toLowerCase","description","style","marginTop","result","idx","color","fontStyle","htmlFor","rows","value","onChange","e","target","placeholder","margin","height","theme","val","options","fontSize","minimap","enabled","_c","$RefreshReg$"],"sources":["C:/Users/rithe/OneDrive/Desktop/PROJECTIARE/assigment/src/SolveProblemPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport Split from \"react-split\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport \"./SolveProblemPage.css\";\n\nfunction SolveProblemPage({ problems, userInfo }) {\n  const { problemId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const problem = problems.find((p) => String(p.id) === String(problemId)) || {};\n\n  const [testCaseResults, setTestCaseResults] = useState([null, null, null, null, null]);\n  const [tab, setTab] = useState(\"description\");\n  const [code, setCode] = useState(\"// Write your code here...\");\n  const [language, setLanguage] = useState(\"python\");\n  const [customInput, setCustomInput] = useState(\"\");\n  const [runMessage, setRunMessage] = useState(\"\");\n  const [customOutput, setCustomOutput] = useState(\"\");\n  const [isDisqualified, setIsDisqualified] = useState(false);\n\n  const example = problem.example || { input: \"1 2\", output: \"3\" };\n\n  // --- Exam Mode and Malpractice Detection ---\n  useEffect(() => {\n    if (location.state?.examMode) {\n      const element = document.documentElement;\n      if (element.requestFullscreen) {\n        element.requestFullscreen().catch(err => {\n          console.error(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n        });\n      }\n    }\n\n    const handleMalpractice = () => {\n      if (!document.fullscreenElement) {\n        setIsDisqualified(true);\n        console.warn(\"Malpractice detected: User exited full-screen or switched tabs.\");\n      }\n    };\n\n    document.addEventListener(\"fullscreenchange\", handleMalpractice);\n    window.addEventListener(\"blur\", handleMalpractice);\n\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleMalpractice);\n      window.removeEventListener(\"blur\", handleMalpractice);\n      if (document.fullscreenElement && document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n  }, [location.state]);\n\n  const handleRun = () => {\n    const simulated = Array(5).fill(0).map(() => Math.random() > 0.5);\n    setTestCaseResults(simulated);\n    setRunMessage(\"Code evaluated against hidden test cases.\");\n    setTab(\"testcases\");\n  };\n\n  const handleRunCustom = () => {\n    if (customInput.trim().length > 0) {\n      setCustomOutput(\"(Simulated Output): \" + customInput.split(\"\").reverse().join(\"\"));\n    } else {\n      setCustomOutput(\"\");\n    }\n  };\n\n  const handleSubmit = () => {\n    setRunMessage(\"Final submission successful!\");\n    // You would typically navigate away or lock the UI after final submission\n  };\n\n  // Render a disqualification overlay if malpractice is detected\n  if (isDisqualified) {\n    return (\n      <div className=\"disqualified-overlay\">\n        <h2>Malpractice Detected</h2>\n        <p>You have been disqualified for leaving the full-screen mode.</p>\n        <p>Your session has been terminated.</p>\n        <button className=\"back-btn\" onClick={() => navigate(\"/\")}>Return to Dashboard</button>\n      </div>\n    );\n  }\n\n  // THIS IS THE MAIN RETURN WITH ALL CONTENT RESTORED\n  return (\n    <div className=\"solve-problem-page-root\">\n      <Split className=\"split-panel\" sizes={[45, 55]} minSize={320} gutterSize={8} cursor=\"col-resize\">\n        {/* LEFT PANEL - PROBLEM DETAILS */}\n        <div className=\"left-question-panel\">\n          <h2>{problem.title}</h2>\n          <div className={`difficulty-badge ${problem.difficulty?.toLowerCase()}`}>{problem.difficulty}</div>\n          \n          <div className=\"panel-tabs\">\n            <button className={tab === \"description\" ? \"active\" : \"\"} onClick={() => setTab(\"description\")}>Description</button>\n            <button className={tab === \"examples\" ? \"active\" : \"\"} onClick={() => setTab(\"examples\")}>Examples</button>\n            <button className={tab === \"testcases\" ? \"active\" : \"\"} onClick={() => setTab(\"testcases\")}>Test Cases</button>\n            <button className={tab === \"custom\" ? \"active\" : \"\"} onClick={() => setTab(\"custom\")}>Custom Input</button>\n          </div>\n\n          <div className=\"panel-tabpane\">\n            {tab === \"description\" && (\n              <div className=\"question-description\">{problem.description || \"No description provided.\"}</div>\n            )}\n            {tab === \"examples\" && (\n              <div>\n                <strong>Example Input:</strong><pre>{example.input}</pre>\n                <strong>Example Output:</strong><pre>{example.output}</pre>\n              </div>\n            )}\n            {tab === \"testcases\" && (\n              <div style={{ marginTop: 10 }}>\n                <div className=\"testcase-boxes\">\n                  {testCaseResults.map((result, idx) => (\n                    <div key={idx} className={`testcase-box ${result === null ? \"idle\" : result ? \"pass\" : \"fail\"}`} title={result === null ? \"Not evaluated\" : result ? \"Passed\" : \"Failed\"}>\n                      {idx + 1}\n                    </div>\n                  ))}\n                </div>\n                <div style={{ color: \"#888\", fontStyle: \"italic\", marginTop: 10 }}>Results of hidden test cases are shown here.</div>\n              </div>\n            )}\n            {tab === \"custom\" && (\n              <div>\n                <label htmlFor=\"custom-input\"><strong>Custom Input:</strong></label>\n                <textarea id=\"custom-input\" className=\"custom-input-area\" rows=\"5\" value={customInput} onChange={e => setCustomInput(e.target.value)} placeholder=\"Enter your own test input...\" />\n                <button className=\"run-btn\" style={{ marginTop: 12 }} onClick={handleRunCustom}>Run Custom Input</button>\n                {customOutput && (\n                  <div className=\"custom-output-panel\">\n                    <b>Custom Output:</b>\n                    <pre style={{ margin: 0 }}>{customOutput}</pre>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* RIGHT PANEL - CODE EDITOR */}\n        <div className=\"right-editor-panel\">\n          <div className=\"editor-toolbar\">\n            <select value={language} onChange={e => setLanguage(e.target.value)}>\n              <option value=\"python\">Python</option>\n              <option value=\"cpp\">C++</option>\n              <option value=\"java\">Java</option>\n            </select>\n            <button className=\"run-btn\" onClick={handleRun}>Run Tests</button>\n            <button className=\"submit-btn\" onClick={handleSubmit}>Submit Code</button>\n          </div>\n          <MonacoEditor\n            height=\"calc(100% - 120px)\" // Adjust height to fit panel\n            theme=\"vs-dark\"\n            language={language}\n            value={code}\n            onChange={(val) => setCode(val)}\n            options={{ fontSize: 15, minimap: { enabled: false } }}\n          />\n          {runMessage && (\n            <div className=\"output-panel\" style={{ marginTop: 12 }}>{runMessage}</div>\n          )}\n        </div>\n      </Split>\n    </div>\n  );\n}\n\nexport default SolveProblemPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}